{"version":3,"file":"vue-moment.min.js","sources":["../node_modules/moment/moment.js","../vue-moment.js"],"sourcesContent":["//! moment.js\n//! version : 2.29.4\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i,\n            arrLen = arr.length;\n        for (i = 0; i < arrLen; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m),\n                parsedParts = some.call(flags.parsedDateParts, function (i) {\n                    return i != null;\n                }),\n                isNowValid =\n                    !isNaN(m._d.getTime()) &&\n                    flags.overflow < 0 &&\n                    !flags.empty &&\n                    !flags.invalidEra &&\n                    !flags.invalidMonth &&\n                    !flags.invalidWeekday &&\n                    !flags.weekdayMismatch &&\n                    !flags.nullInput &&\n                    !flags.invalidFormat &&\n                    !flags.userInvalidated &&\n                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            } else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i,\n            prop,\n            val,\n            momentPropertiesLen = momentProperties.length;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentPropertiesLen > 0) {\n            for (i = 0; i < momentPropertiesLen; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key,\n                    argLen = arguments.length;\n                for (i = 0; i < argLen; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens =\n            /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        return mom.isValid()\n            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n            : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (\n                unit === 'FullYear' &&\n                isLeapYear(mom.year()) &&\n                mom.month() === 1 &&\n                mom.date() === 29\n            ) {\n                value = toInt(value);\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                    value,\n                    mom.month(),\n                    daysInMonth(value, mom.month())\n                );\n            } else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i,\n                prioritizedLen = prioritized.length;\n            for (i = 0; i < prioritizedLen; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord =\n            /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(\n                    /\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,\n                    function (matched, p1, p2, p3, p4) {\n                        return p1 || p2 || p3 || p4;\n                    }\n                )\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback,\n            tokenLen;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        tokenLen = token.length;\n        for (i = 0; i < tokenLen; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths =\n            'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n                '_'\n            ),\n        defaultLocaleMonthsShort =\n            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(\n        ['w', 'ww', 'W', 'WW'],\n        function (input, week, config, token) {\n            week[token.substr(0, 1)] = toInt(input);\n        }\n    );\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays =\n            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n            ? weekdays[m.day()]\n            : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n            ? this._weekdaysShort[m.day()]\n            : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n            ? this._weekdaysMin[m.day()]\n            : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function isLocaleNameSane(name) {\n        // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n        return name.match('^[^/\\\\\\\\]*$') != null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            typeof module !== 'undefined' &&\n            module &&\n            module.exports &&\n            isLocaleNameSane(name)\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                    ? DATE\n                    : a[HOUR] < 0 ||\n                      a[HOUR] > 24 ||\n                      (a[HOUR] === 24 &&\n                          (a[MINUTE] !== 0 ||\n                              a[SECOND] !== 0 ||\n                              a[MILLISECOND] !== 0))\n                    ? HOUR\n                    : a[MINUTE] < 0 || a[MINUTE] > 59\n                    ? MINUTE\n                    : a[SECOND] < 0 || a[SECOND] > 59\n                    ? SECOND\n                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                    ? MILLISECOND\n                    : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 =\n            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat,\n            isoDatesLen = isoDates.length,\n            isoTimesLen = isoTimes.length;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n            for (i = 0, l = isoDatesLen; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimesLen; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^()]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era,\n            tokenLen;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n        tokenLen = tokens.length;\n        for (i = 0; i < tokenLen; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false,\n            configfLen = config._f.length;\n\n        if (configfLen === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < configfLen; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i,\n            orderLen = ordering.length;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < orderLen; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex =\n            /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property,\n            propertyLen = properties.length;\n\n        for (i = 0; i < propertyLen; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n            ? 'lastWeek'\n            : diff < 0\n            ? 'lastDay'\n            : diff < 1\n            ? 'sameDay'\n            : diff < 2\n            ? 'nextDay'\n            : diff < 7\n            ? 'nextWeek'\n            : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (!arguments[0]) {\n                time = undefined;\n                formats = undefined;\n            } else if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(\n        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],\n        function (input, array, config, token) {\n            var era = config._locale.erasParse(input, token, config._strict);\n            if (era) {\n                getParsingFlags(config).era = era;\n            } else {\n                getParsingFlags(config).invalidEra = input;\n            }\n        }\n    );\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(\n        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n        function (input, week, config, token) {\n            week[token.substr(0, 2)] = toInt(input);\n        }\n    );\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y');\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.29.4';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n","module.exports = {\n  install(Vue, options) {\n    const moment = options && options.moment ? options.moment : require('moment');\n\n    Object.defineProperties(Vue.prototype, {\n      $moment: {\n        get() {\n          return moment;\n        },\n      },\n    });\n\n    Vue.moment = moment;\n\n    Vue.filter('moment', (...args) => {\n      args = Array.prototype.slice.call(args);\n      const input = args.shift();\n      let date;\n\n      if (Array.isArray(input) && typeof input[0] === 'string') {\n        // If input is array, assume we're being passed a format pattern to parse against.\n        // Format pattern will accept an array of potential formats to parse against.\n        // Date string should be at [0], format pattern(s) should be at [1]\n        date = moment(input[0], input[1], true);\n      } else if (typeof input === 'number') {\n        if (input.toString().length < 12) {\n          // If input is an integer with fewer than 12 digits, assume Unix seconds...\n          date = moment.unix(input);\n        } else {\n          // ..otherwise, assume milliseconds.\n          date = moment(input);\n        }\n      } else {\n        // Otherwise, throw the input at moment and see what happens...\n        date = moment(input);\n      }\n\n      if (!input || !date.isValid()) {\n        // Log a warning if moment couldn't reconcile the input. Better than throwing an error?\n        console.warn('Could not build a valid `moment` object from input.');\n        return input;\n      }\n\n      function parse(...args) {\n        args = Array.prototype.slice.call(args);\n        const method = args.shift();\n\n        switch (method) {\n          case 'add': {\n            /*\n            * Mutates the original moment by adding time.\n            * http://momentjs.com/docs/#/manipulating/add/\n            */\n\n            const addends = args.shift()\n              .split(',')\n              .map(Function.prototype.call, String.prototype.trim);\n            const obj = {};\n\n            for (let n = 0; n < addends.length; n++) {\n              const addend = addends[n].split(' ');\n              obj[addend[1]] = addend[0];\n            }\n            date.add(obj);\n            break;\n          }\n\n          case 'subtract': {\n            /*\n            * Mutates the original moment by subtracting time.\n            * http://momentjs.com/docs/#/manipulating/subtract/\n            */\n\n            const subtrahends = args.shift()\n              .split(',')\n              .map(Function.prototype.call, String.prototype.trim);\n            const obj = {};\n\n            for (let n = 0; n < subtrahends.length; n++) {\n              const subtrahend = subtrahends[n].split(' ');\n              obj[subtrahend[1]] = subtrahend[0];\n            }\n            date.subtract(obj);\n            break;\n          }\n\n          case 'from': {\n            /*\n            * Display a moment in relative time, either from now or from a specified date.\n            * http://momentjs.com/docs/#/displaying/fromnow/\n            */\n\n            let from = 'now';\n            let removeSuffix = false;\n\n            if (args[0] === 'now') args.shift();\n            // If valid, assume it is a date we want the output computed against.\n            if (moment(args[0]).isValid()) from = moment(args.shift());\n\n            if (args[0] === true) {\n              args.shift();\n              removeSuffix = true;\n            }\n\n            if (from !== 'now') {\n              date = date.from(from, removeSuffix);\n            } else {\n              date = date.fromNow(removeSuffix);\n            }\n            break;\n          }\n\n          case 'diff': {\n            /*\n            * Mutates the original moment by doing a difference with another date.\n            * http://momentjs.com/docs/#/displaying/difference/\n            */\n\n            let referenceTime = moment();\n            let units = '';\n            let float = false;\n\n            if (moment(args[0]).isValid()) {\n              // If valid, assume it is a date we want the output computed against.\n              referenceTime = moment(args.shift());\n            } else if (args[0] === null || args[0] === 'now') {\n              // If null or 'now', remove argument and proceed with default referenceTime.\n              args.shift();\n            }\n\n            if (args[0]) units = args.shift();\n\n            if (args[0] === true) float = args.shift();\n\n            date = date.diff(referenceTime, units, float);\n            break;\n          }\n\n          case 'calendar': {\n            /*\n            * Formats a date with different strings depending on how close\n            * to a certain date (today by default) the date is.\n            * http://momentjs.com/docs/#/displaying/calendar-time/\n            */\n\n            let referenceTime = moment();\n            let formats = {};\n\n            if (moment(args[0]).isValid()) {\n              // If valid, assume it is a date we want the output computed against.\n              referenceTime = moment(args.shift());\n            } else if (args[0] === null || args[0] === 'now') {\n              // If null or 'now', remove argument and proceed with default referenceTime.\n              args.shift();\n            }\n\n            if (typeof args[0] === 'object') formats = args.shift();\n\n            date = date.calendar(referenceTime, formats);\n            break;\n          }\n\n          case 'utc': {\n            /*\n            * Mutates the original moment by converting to UTC\n            * https://momentjs.com/docs/#/manipulating/utc/\n            */\n            date.utc();\n            break;\n          }\n\n          case 'timezone': {\n            /*\n            * Mutates the original moment by converting to a new timezone.\n            * https://momentjs.com/timezone/docs/#/using-timezones/converting-to-zone/\n            */\n            date.tz(args.shift());\n            break;\n          }\n\n          default: {\n            /*\n            * Formats a date by taking a string of tokens and replacing\n            * them with their corresponding values.\n            * http://momentjs.com/docs/#/displaying/format/\n            */\n\n            const format = method;\n            date = date.format(format);\n          }\n        }\n\n        if (args.length) parse.apply(parse, args);\n      }\n\n      parse.apply(parse, args);\n\n      return date;\n    });\n\n    Vue.filter('duration', (...args) => {\n      /*\n      * Basic pass-through filter for leveraging moment.js's ability\n      * to manipulate and display durations.\n      * https://momentjs.com/docs/#/durations/\n      */\n      args = Array.prototype.slice.call(args);\n      const input = args.shift();\n      const method = args.shift();\n\n      function createDuration(time) {\n        if (!Array.isArray(time)) time = [time];\n        const result = moment.duration(...time);\n        if (!result.isValid()) console.warn('Could not build a valid `duration` object from input.');\n        return result;\n      }\n      let duration = createDuration(input);\n\n      if (method === 'add' || method === 'subtract') {\n        // Generates a duration object and either adds or subtracts it\n        // from our original duration.\n        const durationChange = createDuration(args);\n        duration[method](durationChange);\n      } else if (duration && duration[method]) {\n        // This gives a full proxy to moment.duration functions.\n        duration = duration[method](...args);\n      }\n\n      return duration;\n    });\n  },\n};\n"],"names":["global","factory","this","hookCallback","some","hooks","apply","arguments","isArray","input","Array","Object","prototype","toString","call","isObject","hasOwnProp","a","b","hasOwnProperty","isObjectEmpty","obj","getOwnPropertyNames","length","k","isUndefined","isNumber","isDate","Date","map","arr","fn","i","res","arrLen","push","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","getParsingFlags","m","_pf","isValid","_isValid","flags","parsedParts","parsedDateParts","isNowValid","isNaN","_d","getTime","overflow","empty","invalidEra","invalidMonth","invalidWeekday","weekdayMismatch","nullInput","invalidFormat","userInvalidated","meridiem","_strict","charsLeftOver","unusedTokens","undefined","bigHour","isFrozen","createInvalid","NaN","fun","t","len","momentProperties","updateInProgress","copyConfig","to","from","prop","val","momentPropertiesLen","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","Moment","config","updateOffset","isMoment","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","key","args","argLen","_typeof","slice","join","Error","stack","keys","deprecations","deprecateSimple","name","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","set","zeroFill","number","targetLength","forceSign","absNumber","Math","abs","zerosToFill","pow","max","substr","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","callback","func","localeData","formatMoment","expandFormat","array","match","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","aliases","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","isLeapYear","year","absFloor","ceil","floor","toInt","argumentForCoercion","coercedNumber","value","isFinite","makeGetSet","keepTime","get","set$1","month","date","daysInMonth","regexes","match1","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p1","p2","p3","p4","s","tokens","addParseToken","tokenLen","addWeekParseToken","_w","addTimeToArrayFromToken","_a","indexOf","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","x","modMonth","o","monthsShort","months","match1to2","match2","monthsShortRegex","monthsRegex","monthsParse","defaultLocaleMonths","split","defaultLocaleMonthsShort","MONTHS_IN_FORMAT","defaultMonthsShortRegex","matchWord","defaultMonthsRegex","setMonth","dayOfMonth","min","getSetMonth","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","sort","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","daysInYear","y","matchSigned","match1to4","match4","match1to6","match6","parseTwoDigitYear","parseInt","getSetYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","dayOfYear","weekOfYear","resWeek","weekOffset","weeksInYear","weekOffsetNext","shiftWeekdays","ws","n","concat","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","d","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","day","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","match3to4","match5to6","kInput","_isPm","isPM","_meridiem","pos","pos1","pos2","globalLocale","baseConfig","locales","localeFamilies","commonPrefix","arr1","arr2","minl","normalizeLocale","loadLocale","oldLocale","module","exports","isLocaleNameSane","_abbr","require","e","getSetGlobalLocale","values","data","getLocale","defineLocale","abbr","_config","parentLocale","forEach","names","j","next","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","aspNetJsonRegex","obsOffsets","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","string","exec","isoDatesLen","isoTimesLen","isoTimes","iso","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","configFromRFC2822","parsedArray","rfc2822","weekdayStr","parsedInput","getDay","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","setUTCMinutes","getUTCMinutes","defaults","c","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","now","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","w","weekYear","temp","weekdayOverflow","curWeek","GG","W","E","createLocal","_week","gg","_dayOfYear","_nextDay","h","M","ms","setFullYear","configFromStringAndFormat","ISO_8601","RFC_2822","skipped","era","stringLength","totalParsedInputLength","unusedInput","hour","isPm","meridiemHour","meridiemFixWrap","erasConvertYear","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","validFormatFound","bestFormatIsValid","configfLen","score","createFromInputFallback","dayOrDate","minute","second","millisecond","isUTC","add","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","duration","years","quarters","quarter","weeks","isoWeek","days","milliseconds","unitHasDecimal","orderLen","parseFloat","isDurationValid","_milliseconds","_days","_months","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","sign","matchShortOffset","offsetFromString","chunkOffset","matcher","parts","matches","cloneWithOffset","model","diff","clone","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","createDuration","ret","diffRes","isoRegex","parseIso","base","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","tmp","addSubtract","isAdding","invalid","subtract","isString","String","isMomentInput","arrayTest","dataTypeTest","filter","item","isNumberOrStringArray","objectTest","propertyTest","properties","propertyLen","isMomentInputObject","monthDiff","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","matchEraAbbr","erasAbbrRegex","computeErasParse","abbrPieces","namePieces","narrowPieces","eras","narrow","_erasRegex","_erasNameRegex","_erasAbbrRegex","_erasNarrowRegex","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","erasNameRegex","erasNarrowRegex","erasParse","matchUnsigned","_eraYearOrdinalRegex","eraYearOrdinalParse","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","match1to3","match3","getSetMinute","getSetMillisecond","getSetSecond","parseMs","proto","preParsePostFormat","calendar","time","formats","isCalendarSpec","sod","startOf","calendarFormat","asFloat","that","zoneDelta","endOf","startOfDate","isoWeekday","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","prioritizedLen","toArray","toObject","toDate","toISOString","keepOffset","inspect","prefix","suffix","zone","isLocal","Symbol","for","toJSON","unix","creationData","eraName","since","until","eraNarrow","eraAbbr","eraYear","dir","isoWeeks","weekInfo","weeksInWeekYear","isoWeeksInYear","isoWeeksInISOWeekYear","parseWeekday","parseIsoWeekday","getSetHour","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","matchOffset","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","array1","array2","dontConvert","lengthDiff","diffs","compareArrays","proto$1","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","_calendar","_longDateFormat","formatUpper","toUpperCase","tok","_invalidDate","_ordinal","relativeTime","isFuture","_relativeTime","pastFuture","source","_eras","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","charAt","isLower","Infinity","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","as","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","totalSign","ymSign","daysSign","hmsSign","total","toFixed","proto$2","monthsFromDays","argWithSuffix","argThresholds","withSuffix","th","assign","ss","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","moment","Vue","options","defineProperties","parse","method","addends","trim","addend","subtrahends","subtrahend","removeSuffix","referenceTime","float","tz","durationChange"],"mappings":"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"}